#file_info
  = "#{file_stat.path} has #{pluralize(children.to_i,'file')}" if children.to_i > 0

#file_list{:style => 'display: none' }
  - if !file_names_hash.empty?
    %ul
      - file_names_hash.each do |file,stats|
        %li.hdfs-node
          %a{:id => file.gsub(/[^[:alnum:]]/,'-'), :connection => connection}= file.split('/').last
  - else
    = render 'file_info', :file_stat => file_stat

#file_tiles{:style => 'display: none' }
  - if !file_names_hash.empty?
    - file_names_hash.each do |file,stats|
      %button.hdfs-node{:id => file.gsub(/[^[:alnum:]]/,'-'), :connection => connection}
        = file_icon(file, stats)
        %br
        = file.split('/').last
  - else
    = render 'file_info', :file_stat => file_stat

#file_details{:style => 'display: none' }
  - if !file_names_hash.empty?
    #file_details_table
      %table
        %thead
          %tr
            %th.name File Name
            %th Length
            %th Directory
            %th Block Reps
            %th Block Size
            %th Owner
            %th Group
        %tbody
          - file_names_hash.each do |file,stats|
            %tr.hdfs-node{:id => file.gsub(/[^[:alnum:]]/,'-'), :connection => connection}
              %td.name=file.split('/').last
              %td=number_to_human_size stats.length, :delimiter => 4
              %td=stats.isdir
              %td=number_with_delimiter stats.block_replication, :delimiter => ','
              %td=number_with_delimiter stats.blocksize, :delimiter => ','
              %td=stats.owner
              %td=stats.group
  - else
    = render 'file_info', :file_stat => file_stat
