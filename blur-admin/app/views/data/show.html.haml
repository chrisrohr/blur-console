- content_for :title, 'Data'
- content_for :javascript do
  =javascript_include_tag 'jquery.jstree','compiled/data'

#data-dtables
  #dtables-title
    %h2 Tables
    %br
  %table#dtables-table
    %tr#dtables-table-header
      %th Table
      %th Shards
      %th Count
      %th Size
      %th Queries/Second
      %th Enabled
      - if can? :destroy, :data
        - col_span = 7
        %th Actions
      - else
        - col_span = 6

    -@blur_tables.each do |table|
      %tr.tr-underline{:id => table.table_name}
        %td
          %b
            name:
          =table.table_name
        %td
          .table-hosts
            - if table.shards
            
              %a{:href=>'#', :class => "host-shards", :id => table.table_name} 
                Hosts: 
                = table.shards.length
                Shards: 
                = table.shards.values.inject(0) {|sum, shard_list| sum + shard_list.length}
            - else
              Not Available
            
        %td
          -if table.record_count
            = number_with_delimiter(table.record_count, :delimiter => ',')
          -else
            Not Available
        %td
          - if table.current_size
            =table.current_size
          - else
            Not Available
        %td
          - if table.query_usage
            =number_with_delimiter(table.query_usage, :delimiter => ',')
          - else
            Not Available
        %td
          - if can? :update, :data  
            = check_box_tag '', "1", table.is_enabled?, :class=>'enable', :table_name => table.table_name    
          -else 
            =table.is_enabled?
        
        - if can? :delete, :data  
          %td
            = submit_tag 'delete', :class=>'delete-table', :table_name => table.table_name
      %tr{:id => table.table_name}
        %td{:colspan => col_span}
          %b location:
          - if table.table_uri
            = table.table_uri
          - else
            Not Available
      %tr.tr-underline{:id => table.table_name}
        %td{:colspan => col_span}
          %b definition:
          - if table.table_schema
            .table-def
              %ul
                %li#families{:id=>"#{table.table_name}", :class => "family-node"}
                  %a{:href=>'#', :class => 'families'}Column Families
                  %ul
                    -table.table_schema.each do |family, sets|
                      %li#family{:id=>"#{table.table_name}.#{family}", :class => "family-node"}
                        %a{:href=>'#'}
                          = "#{family} (#{table.table_analyzer})"
                        %ul
                          -sets.each do |word|
                            %li#column{:id=>"#{table.table_name}.#{family}.#{word}"}
                              %a{:href=>'#'}= word
          - else
            Not Available

#confirm.ui-confirm{:hidden => true}
  #confirm-dialog
  #confirm-buttons
    %form
      %input#underlying-confirm{:type => "checkbox", :checked => false}
        =label_tag :t, "Delete underlying table index", :id => "delete-label"
      %button#confirm-submit.cancel{:type => "button"}
        Cancel
      %button#confirm-submit.ok{:type => "button"}
        Delete

-@blur_tables.each do |table|
  #display.shard-info{:hidden => true, :class => table.table_name}
    Shard Servers:
    - if table.shards
      .table-def
        %ul
          -table.shards.each do |host, shards|
            %li#hosts{:id=>"#{host}"}
              %a{:href=>'#'}= host
              %ul
                -shards.each do |shard|
                  %li#shards{:id=>"#{host}_#{shard}"}
                    %a{:href=>'#'}= shard
