- nil_message = "Not Available"
Bulk Action:
%select.bulk-action-selector
  -if !tables.empty? && can?(:update, :blur_tables)
    %option{:value => "disable"}Disable Tables
%button.bulk-action-button.btn Do Action
- if !tables.empty? && can?(:update, :blur_tables)
  %button.disable_table_button.btn.primary{:blur_cluster_id => cluster} Disable All Tables

%table.cluster_table.zebra-striped{:blur_cluster_id => cluster}
  %thead
    %tr
      %th
      %th Name
      %th Hosts/Shards
      %th Row Count
      %th Record Count
      %th Info
      %th
  %tbody
    - if tables.empty?
      %tr
        %td{:colspan => 7} No Tables found.
    - tables.each do |table|
      %tr.blur_table{:blur_table_id => table.id}
        %td
          %input.bulk-action-checkbox{:type => "checkbox"}
        %td
          %span>=table.table_name
        %td
          - if table.server
            = link_to hosts_blur_table_path(table), :remote => true, :class => 'hosts' do
              = table.hosts.keys.length
              &#47;
              = table.hosts.values.flatten.length
          - else
            = nil_message
        %td= table.row_count ? number_with_delimiter(table.row_count, :delimiter => ',') : nil_message
        %td= table.record_count ? number_with_delimiter(table.record_count, :delimiter => ',') : nil_message
        %td= link_to "view", schema_blur_table_path(table), :remote => true, :class => 'schema'
        %td
          - if table.status == 4 && can?(:update, :blur_tables)
            %button.disable_table_button.btn.primary{:blur_cluster_id => cluster} Disable Table
          - elsif table.status == 3
            Disabling...
:javascript
  $("#cluster_#{cluster} .table_accordion h3:eq(0) .counter").html(#{tables.size})