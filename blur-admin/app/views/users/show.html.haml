- content_for :title, 'User'
- content_for :javascript do
  =javascript_include_tag 'compiled/users'

#show_user_wrapper
  .info-contain
    #pref-col-info
      #pref-bin
        #pref-col
          .section-label{:id => @current_user.id} My Saved Column Families
          %ul#my-cols.sort
            -if @preferences.size() == 0
              #no-saved None Currently Saved
            -else
              #no-saved{:style => "display:none;"} None Currently Saved
              -@preferences.each do |pref|
                .sel-fam{:id => "columns_#{pref}"}
                  =pref
        #pref-trash
          %ul#actual-trash.sort
            #trash Drag a column here to remove it from your preferences
        #pref-key
          Key:
          %br
          Saved Column:
          #orange_color
          %br
          Unsaved Column:
          #blue_color
      #opt-col
        .section-label All Column Families
        -@choices.each do |option|
          -if @preferences.include? option
            .my-select.fam{:id => "columns_#{option}"}
              =option
          -else
            .fam{:id => "columns_#{option}"}  
              =option
                  
    #pref-filter-info
      %h3
        Filter Preferences
      =form_tag('/preference/filter', :method => :post, :id => 'filters', :remote => true)
      .query_filter
        = label_tag :created_at_time, 'Within past:'
        = select_tag :created_at_time, options_for_select([['1 minute', 1],
                                                           ['5 minutes', 5],
                                                           ['15 minutes', 15],
                                                           ['30 minutes', 30],
                                                           ['1 hour', 60]], @filters[0])
      .query_filter
        = label_tag :super_query_on, 'Super Query:'
        = select_tag :super_query_on, options_for_select([['All', nil],
                                                          ['On', true],
                                                          ['Off', false]], @filters[1])
      .query_filter
        = label_tag :running, 'Running:'
        = select_tag :running, options_for_select([['All Queries', nil],
                                                   ['Yes', true],
                                                   ['No', false]], @filters[2])
      .query_filter
        = label_tag :interrupted, 'Interrupted:'
        = select_tag :interrupted, options_for_select([['All Queries', nil],
                                                       ['Yes', true],
                                                       ['No', false]], @filters[3])
      .query_filter
        = label_tag :refresh_period, 'Refresh:'
        = select_tag :refresh_period, options_for_select([['never', 'false'],
                                                          ['continuously', 'continuous'],
                                                          ['every 10 seconds', 10],
                                                          ['every 1 minute', 60],
                                                          ['every 10 minutes', 600]], @filters[4])
      

    #user-info
      %p
        %strong Username:
        = @user.username
      %p
        %strong Email:
        = @user.email
      %p
        %strong
          = @user.roles.to_a.join ', '
      %p
        - if can? :edit, @user
          = link_to "Edit", edit_user_path(@user)
        - if can? :destroy, @user
          |
          = link_to "Delete User", @user, :confirm => 'Are you sure?', :method => :delete
        - if can? :index, :users
          |
          = link_to "View All Users", users_path
